/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.github.dougkelly88.FLIMPlateReaderGUI.GeneralGUIComponents;

import java.awt.BorderLayout;
import javax.swing.BorderFactory;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JProgressBar;
import javax.swing.border.Border;

/**
 *
 * @author Frederik
 */
public class ProgressBar extends javax.swing.JPanel {


    /**
     * Creates new form ProgressBar
     */
    public ProgressBar() {
        initComponents();
        jProgressBar1.setValue(0);
        jProgressBar1.setStringPainted(true);
        Border border = BorderFactory.createTitledBorder("HCA sequence Progress...");
        jProgressBar1.setBorder(border);
        jProgressBar1.repaint();
    }
    public static void main(){
            JFrame parentFrame = new JFrame();
            parentFrame.setSize(500, 150);
            JLabel jl = new JLabel();
            jl.setText("Count : 0");

            parentFrame.add(BorderLayout.CENTER, jl);
            parentFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

            parentFrame.setVisible(true);

            final JDialog dlg = new JDialog(parentFrame, "Progress Dialog", true);
            JProgressBar dpb = new JProgressBar(0, 500);
            dlg.add(BorderLayout.CENTER, dpb);
            dlg.add(BorderLayout.NORTH, new JLabel("Progress..."));
            dlg.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
            dlg.setSize(300, 75);
            dlg.setLocationRelativeTo(parentFrame);

            Thread t = new Thread(new Runnable() {
            public void run() {
                dlg.setVisible(true);
            }
            });
            t.start();
            for (int i = 0; i <= 500; i++) {
                    jl.setText("Count : " + i);
                    dpb.setValue(i);
                if(dpb.getValue() == 500){
                    dlg.setVisible(false);
                    System.exit(0);
        
                }
            try {
                Thread.sleep(25);
            } catch (InterruptedException e) {
            e.printStackTrace();
        }
        }
            dlg.setVisible(true);
    
    }
    
    

    public void addProgressBarIncrement(double ind, double sassSize) { 
        double prozentIncr= 1/sassSize*100;
        double prozentDouble= (ind+1)*prozentIncr;
        int prozentInt=(int) prozentDouble;
        jProgressBar1.setValue(prozentInt);
        jProgressBar1.repaint();
        System.out.println(prozentInt);
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables

    void initialize() {
        Thread PBThread=new Thread(new ProgressBarThread() {});
        PBThread.start();
        repaint();
    }
}
